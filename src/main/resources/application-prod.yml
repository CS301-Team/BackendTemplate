# Production environment configuration
spring:
  # Production-specific Jackson configuration
  jackson:
    serialization:
      indent-output: false # Compact JSON in production

# Server configuration for production
server:
  port: ${PROD_SERVER_PORT:8080}
  servlet:
    context-path: ${PROD_SERVER_CONTEXT_PATH:/api}
  # Production server optimizations
  tomcat:
    threads:
      max: ${PROD_TOMCAT_MAX_THREADS:200}
      min-spare: ${PROD_TOMCAT_MIN_SPARE_THREADS:10}

# Production database configuration (PostgreSQL recommended)
# Uncomment when JPA is enabled
# spring:
#   datasource:
#     url: ${PROD_DB_URL:jdbc:postgresql://localhost:5432/backend_template}
#     driver-class-name: ${PROD_DB_DRIVER:org.postgresql.Driver}
#     username: ${PROD_DB_USERNAME}
#     password: ${PROD_DB_PASSWORD}
#     hikari:
#       maximum-pool-size: ${PROD_DB_POOL_SIZE:20}
#       minimum-idle: ${PROD_DB_MIN_IDLE:5}
#       connection-timeout: ${PROD_DB_CONNECTION_TIMEOUT:30000}
#       idle-timeout: ${PROD_DB_IDLE_TIMEOUT:600000}
#       max-lifetime: ${PROD_DB_MAX_LIFETIME:1800000}
#   jpa:
#     hibernate:
#       ddl-auto: ${PROD_JPA_DDL_AUTO:validate}
#     show-sql: ${PROD_JPA_SHOW_SQL:false}
#     properties:
#       hibernate:
#         format_sql: false
#         dialect: org.hibernate.dialect.PostgreSQLDialect

# Production logging (minimal and structured)
logging:
  level:
    "[com.cs301.backend]": ${PROD_LOG_LEVEL_APP:INFO}
    "[org.springframework]": ${PROD_LOG_LEVEL_SPRING:WARN}
    "[org.hibernate]": ${PROD_LOG_LEVEL_HIBERNATE:WARN}
    "[org.springframework.security]": ${PROD_LOG_LEVEL_SECURITY:WARN}
    root: ${PROD_LOG_LEVEL_ROOT:WARN}
  file:
    name: ${PROD_LOG_FILE:/var/log/backend-template/application.log}
  logback:
    rollingpolicy:
      max-file-size: ${PROD_LOG_MAX_FILE_SIZE:10MB}
      max-history: ${PROD_LOG_MAX_HISTORY:30}

# Management endpoints for production (limited exposure)
management:
  endpoints:
    web:
      exposure:
        include: ${PROD_MANAGEMENT_ENDPOINTS:health,info,metrics}
      base-path: ${PROD_MANAGEMENT_BASE_PATH:/management}
  endpoint:
    health:
      show-details: ${PROD_HEALTH_SHOW_DETAILS:never}

# OpenAPI/Swagger configuration for production
springdoc:
  swagger-ui:
    enabled: ${PROD_SWAGGER_ENABLED:false}
  api-docs:
    enabled: ${PROD_API_DOCS_ENABLED:false}

# Production-specific application configuration
app:
  environment: production
  debug-mode: false
  cors:
    allowed-origins: ${PROD_CORS_ALLOWED_ORIGINS}
    allowed-methods: ${PROD_CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE}
    allowed-headers: ${PROD_CORS_ALLOWED_HEADERS:Content-Type,Authorization}
    allow-credentials: ${PROD_CORS_ALLOW_CREDENTIALS:true}
  security:
    jwt:
      secret: ${PROD_JWT_SECRET}
      expiration: ${PROD_JWT_EXPIRATION:3600} # 1 hour in seconds
  cache:
    enabled: ${PROD_CACHE_ENABLED:true}
    ttl: ${PROD_CACHE_TTL:3600} # 1 hour in seconds
  rate-limiting:
    enabled: ${PROD_RATE_LIMITING_ENABLED:true}
    requests-per-minute: ${PROD_RATE_LIMIT_RPM:100}
  monitoring:
    metrics-enabled: ${PROD_METRICS_ENABLED:true}
    tracing-enabled: ${PROD_TRACING_ENABLED:true}
