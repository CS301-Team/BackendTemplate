# Staging environment configuration
# Staging is similar to production but with more debugging capabilities

spring:
  # Staging-specific Jackson configuration
  jackson:
    serialization:
      indent-output: false

# Server configuration for staging
server:
  port: ${STAGING_SERVER_PORT:8080}
  servlet:
    context-path: ${STAGING_SERVER_CONTEXT_PATH:/api}
  tomcat:
    threads:
      max: ${STAGING_TOMCAT_MAX_THREADS:100}
      min-spare: ${STAGING_TOMCAT_MIN_SPARE_THREADS:5}

# Staging database configuration
# Uncomment when JPA is enabled
# spring:
#   datasource:
#     url: ${STAGING_DB_URL:jdbc:postgresql://localhost:5432/backend_template_staging}
#     driver-class-name: ${STAGING_DB_DRIVER:org.postgresql.Driver}
#     username: ${STAGING_DB_USERNAME}
#     password: ${STAGING_DB_PASSWORD}
#     hikari:
#       maximum-pool-size: ${STAGING_DB_POOL_SIZE:10}
#       minimum-idle: ${STAGING_DB_MIN_IDLE:2}
#   jpa:
#     hibernate:
#       ddl-auto: ${STAGING_JPA_DDL_AUTO:validate}
#     show-sql: ${STAGING_JPA_SHOW_SQL:false}

# Staging logging (more verbose than production)
logging:
  level:
    "[com.cs301.backend]": ${STAGING_LOG_LEVEL_APP:INFO}
    "[org.springframework]": ${STAGING_LOG_LEVEL_SPRING:WARN}
    "[org.springframework.security]": ${STAGING_LOG_LEVEL_SECURITY:INFO}
    root: ${STAGING_LOG_LEVEL_ROOT:WARN}
  file:
    name: ${STAGING_LOG_FILE:/var/log/backend-template/staging.log}

# Management endpoints for staging (more than production, less than dev)
management:
  endpoints:
    web:
      exposure:
        include: ${STAGING_MANAGEMENT_ENDPOINTS:health,info,metrics,env}
      base-path: ${STAGING_MANAGEMENT_BASE_PATH:/management}
  endpoint:
    health:
      show-details: ${STAGING_HEALTH_SHOW_DETAILS:when-authorized}

# OpenAPI/Swagger configuration for staging
springdoc:
  swagger-ui:
    enabled: ${STAGING_SWAGGER_ENABLED:true}
  api-docs:
    enabled: ${STAGING_API_DOCS_ENABLED:true}

# Staging-specific application configuration
app:
  environment: staging
  debug-mode: ${STAGING_DEBUG_MODE:false}
  cors:
    allowed-origins: ${STAGING_CORS_ALLOWED_ORIGINS}
    allowed-methods: ${STAGING_CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE}
    allowed-headers: ${STAGING_CORS_ALLOWED_HEADERS:Content-Type,Authorization}
    allow-credentials: ${STAGING_CORS_ALLOW_CREDENTIALS:true}
  security:
    jwt:
      secret: ${STAGING_JWT_SECRET}
      expiration: ${STAGING_JWT_EXPIRATION:3600}
  cache:
    enabled: ${STAGING_CACHE_ENABLED:true}
    ttl: ${STAGING_CACHE_TTL:1800} # 30 minutes
